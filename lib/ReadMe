The files in this directory follow several layout conventions.

1) each .pm which has multiple implementations (optional features or
alternate implementation) has a directory of the same name as the
module.  The alternate/optional implementations are found in that
directory.

2) configuration of the system need only take place in the
TinderConfig.pm file and by variable substitution at the time the
makefile is built.

3) most users should be able to configure the system by editing only
the files:

	TinderConfig.pm
	TreeData.pm

and perhaps the file:

	FileStructure.pm

5) More advanced users will find that most of the changes they need to
make are parameterized within the individual modules.  The constans
coded in TinderConfig are also coded within the modules so that you
need not use TinderConfig if you prefer not to.  However not using
TinderConfig this will require you to perform a CVS merge to update
your sources from the master CVS repository.


3) lib files have the following structure:

	a) Mode line telling emacs the language the code was written in.

	b) a brief discription of what is found in this module

	c) cvs keyword comments, for tracking after code is deployed

	d) the mozzilla public license

	e) any uses which will be required by the module, these are 
		split into two groups the first group is 
		standard perl modles the second is tinderbox specific
		modules

	f) configurable parameters

	g) the actual code of the module


4) there is no code run at the time of loading except for the setting
of static variables and the calling of main::require_modules(@IMPLS)
to load implementation specific modules defined by a string.




The library files in this directory:



HTML.pm - a lightweight replacement for cgi.pm and general html/cgi
processing.  This provides popup windows and a more highly
structured interface for linking then CGI.pm does.  The popup window
code is easily changed to use different technology if needed.  The
parts of tinderbox which need user input via forms all use the
standard perl library CGI.pm.

MailProcess.pm - all the functions which are used by more then one
mailprocessing program.

Persistence - an abstract interface to save the data structures to
disk and load the data back.  An effort is made to ensure files are
updated atomically.  This interface allows us to easily change the
perl module we use to store the data (Data::Dumper, Storable, etc).
You will have choices between Data::Dumper which is slow but text
files allows great debugging capabilities and Storable (not yet
implemented) which is much faster but binary format.  testing is
going into this function.  Data::Dumper module has an implicit eval
and should not be used for securty sensitive uses.

Utils.pm - General purpose utility functions.  Every project needs a
kludge bucket for common access.

Summaries.pm - generate the summary pages which show the current
state of the tree in various formats.  Few (if any) of these pages
make use of the popup window because we want the largest audiance
possible to view them.

TinderDB.pm - the persistant storage for tinterbox.  This package
allows the user to define which features (columns of the status
table) are available and provide a consistant interface to
store/load the data and render the HTML to display the data.
This interface controls the table columns values:
      Time Column, Version Control (VC) checkin lists, 
      notice board display,  build display (colored squares)

TinderHeader.pm - the persistant storage for tinterbox
administrative settings.  This package allows the adminstrator to
set their values and retrieves the values for the status pages.
This interface controls the scalar values:
       TreeState, Build, IgnoreBuilds, MOTD, Images, 

VCDisplay.pm - describes how tinderbox should prepeare URLS to
show the source tree allow VC queries.  Currently there are two
implementations one for users of the bonsai system (cvsquery,
cvsguess, cvsblame) and one for users who have no web based access
to their version control repository.  In the future I will make a
VCDisplay module for CVSWeb.

